services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fm-gateway-api
    environment:
      - FMG_DBHOST=postgres
      - FMG_DBUSER=fmgateway
      - FMG_DBPASS=${POSTGRES_PASSWORD}
      - FMG_PROCESSOR_SOURCE_DIR=/app/tmp/source
      - FMG_PROCESSOR_INPROGRESS_DIR=/app/tmp/inprogress
      - FMG_PROCESSOR_DESTINATION_DIR=/app/tmp/destination
      - FMG_PROCESSOR_ERROR_DIR=/app/tmp/errors
    ports:
      - "3000:3000"
    volumes:
      - api_data:/app/tmp
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    container_name: fm-gateway-ui
    environment:
      - NODE_ENV=production
      - REACT_APP_BACKEND_URL=http://api:3000
    ports:
      - "8080:3002"
    depends_on:
      - api
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: fm-gateway-postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: fmgateway
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fmgateway -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  api_data:
